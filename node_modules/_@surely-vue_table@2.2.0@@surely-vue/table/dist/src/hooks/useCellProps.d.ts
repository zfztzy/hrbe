import type { Ref } from 'vue';
import type { FinallyColumnType, FlatRecord, Key, RenderedCell } from '../components/interface';
interface UseCellProps {
    leftColumns: Ref<FinallyColumnType[]>;
    rightColumns: Ref<FinallyColumnType[]>;
    visibleCenterColumns: Ref<FinallyColumnType[]>;
    data: Ref<FlatRecord[]>;
    mergedRowHeights: Ref<Record<Key, number>>;
    startIndex: Ref<number>;
    bodyWidth: Ref<number>;
    leftWidth: Ref<number>;
    centerWidth: Ref<number>;
    getColumnPosition: (index: number, colSpan?: number) => {
        width: number;
        left: number;
        minWidth: number;
        maxWidth: number;
    };
    getRowHeight: (fromIndex: number, rowSpan?: number) => number;
}
export declare type UseCellPropsRes = {
    allCellProps: Ref<Record<string, Record<string, RenderedCell>>>;
    hasMultiRowSpanInfo: Ref<Record<string, boolean>>;
};
declare const useCellProps: ({ leftColumns, rightColumns, visibleCenterColumns, data, mergedRowHeights, getColumnPosition, bodyWidth, leftWidth, centerWidth, getRowHeight, }: UseCellProps) => UseCellPropsRes;
export default useCellProps;
