import type { PropType } from 'vue';
import type { ColumnType } from '../interface';
declare const _default: import("vue").DefineComponent<{
    columnKey: (StringConstructor | NumberConstructor)[];
    disabled: BooleanConstructor;
    column: PropType<ColumnType<import("../interface").DefaultRecordType>>;
}, {
    dragIcon: string;
    dragging: import("vue").Ref<boolean>;
    className: import("vue").ComputedRef<{
        [x: string]: boolean;
    }>;
    spanRef: import("vue").Ref<HTMLSpanElement>;
    top: import("vue").Ref<number>;
    height: import("vue").Ref<number>;
    rowKey: import("vue").Ref<any>;
    rowKeyType: import("vue").ComputedRef<"string" | "number" | "bigint" | "boolean" | "symbol" | "undefined" | "object" | "function">;
    onMousedown: (e: MouseEvent) => void;
    onTouchStart: (touchEvent: TouchEvent) => void;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, Record<string, any>, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    columnKey: (StringConstructor | NumberConstructor)[];
    disabled: BooleanConstructor;
    column: PropType<ColumnType<import("../interface").DefaultRecordType>>;
}>>, {
    disabled: boolean;
}>;
export default _default;
