import type { PropType } from 'vue';
import type { RowClassName, RowType } from '../interface';
declare const _default: import("vue").DefineComponent<{
    prefixCls: StringConstructor;
    type: {
        type: PropType<RowType>;
    };
    wrapText: {
        type: BooleanConstructor;
        default: boolean;
    };
    getRowClassName: {
        type: PropType<RowClassName<any>>;
    };
}, {
    data: import("vue").ComputedRef<any[]>;
    columns: any;
    rowPosition: import("vue").ComputedRef<number[]>;
    transitionName: import("vue").ComputedRef<string>;
    virtual: import("vue").ComputedRef<boolean>;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, Record<string, any>, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    prefixCls: StringConstructor;
    type: {
        type: PropType<RowType>;
    };
    wrapText: {
        type: BooleanConstructor;
        default: boolean;
    };
    getRowClassName: {
        type: PropType<RowClassName<any>>;
    };
}>>, {
    wrapText: boolean;
}>;
export default _default;
