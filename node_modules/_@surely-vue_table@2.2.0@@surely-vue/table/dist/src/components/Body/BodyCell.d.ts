import type { PropType, ExtractPropTypes, FunctionalComponent } from 'vue';
import type { FinallyColumnType } from '../interface';
declare const cellProps: {
    prefixCls: StringConstructor;
    rowIndex: {
        type: NumberConstructor;
        required: boolean;
    };
    rowKey: {
        type: (StringConstructor | NumberConstructor)[];
    };
    column: {
        type: PropType<FinallyColumnType<import("../interface").DefaultRecordType>>;
        default: () => FinallyColumnType<import("../interface").DefaultRecordType>;
    };
    item: {
        type: PropType<any>;
        default: () => {};
    };
    wrapText: {
        type: BooleanConstructor;
        default: boolean;
    };
    height: {
        tyoe: NumberConstructor;
        default: any;
    };
    hasAppendNode: BooleanConstructor;
    resizeObserver: {
        type: PropType<ResizeObserver>;
    };
    calMaxHeight: FunctionConstructor;
    tooltipVisible: BooleanConstructor;
    getPopupContainer: FunctionConstructor;
    onCellLeave: FunctionConstructor;
};
declare type CellProps = Partial<ExtractPropTypes<typeof cellProps>>;
declare const BodyCell: FunctionalComponent<CellProps>;
export default BodyCell;
