import type { PropType } from 'vue';
import type { FinallyColumnType } from '../interface';
declare const _default: import("vue").DefineComponent<{
    prefixCls: StringConstructor;
    column: {
        type: PropType<FinallyColumnType<import("../interface").DefaultRecordType>>;
        default: () => void;
    };
}, {
    getPopupContainer: import("vue").ComputedRef<import("../interface").GetPopupContainer>;
    rowSelectionType: import("vue").ComputedRef<import("../interface").RowSelectionType>;
    hideSelectAll: import("vue").ComputedRef<boolean>;
    onSelectAllChange: () => void;
    checked: import("vue").ComputedRef<boolean>;
    indeterminate: import("vue").ComputedRef<boolean>;
    disabled: import("vue").ComputedRef<boolean>;
    mergedSelections: import("vue").Ref<import("../interface").SelectionItem[]>;
    onMenuClick: (callback: any) => void;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, Record<string, any>, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    prefixCls: StringConstructor;
    column: {
        type: PropType<FinallyColumnType<import("../interface").DefaultRecordType>>;
        default: () => void;
    };
}>>, {
    column: FinallyColumnType<import("../interface").DefaultRecordType>;
}>;
export default _default;
