import type { PropType } from 'vue';
import type { FinallyColumnType } from '../interface';
import type { SortOrder } from 'ant-design-vue/es/table/interface';
import type { SortState } from '../../hooks/useSorter';
declare const _default: import("vue").DefineComponent<{
    column: {
        type: PropType<FinallyColumnType<import("../interface").DefaultRecordType>>;
        default: () => FinallyColumnType<import("../interface").DefaultRecordType>;
    };
    showSorterTooltip: BooleanConstructor;
    columnKey: {
        type: (NumberConstructor | StringConstructor)[];
    };
    sorterState: PropType<SortState<any>>;
    sorterOrder: PropType<SortOrder>;
    sortDirections: PropType<SortOrder[]>;
    nextSortOrder: PropType<SortOrder>;
    wrapText: BooleanConstructor;
    showFilter: BooleanConstructor;
}, {
    showUpNode: import("vue").ComputedRef<boolean>;
    showDownNode: import("vue").ComputedRef<boolean>;
    className: import("vue").ComputedRef<{
        [x: string]: boolean;
    }>;
    prefixCls: import("vue").ComputedRef<string>;
    upClass: import("vue").ComputedRef<{
        [x: string]: boolean;
        active: boolean;
    }>;
    downClass: import("vue").ComputedRef<{
        [x: string]: boolean;
        active: boolean;
    }>;
    tableContext: import("../context/TableContext").TableContextProps;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, Record<string, any>, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    column: {
        type: PropType<FinallyColumnType<import("../interface").DefaultRecordType>>;
        default: () => FinallyColumnType<import("../interface").DefaultRecordType>;
    };
    showSorterTooltip: BooleanConstructor;
    columnKey: {
        type: (NumberConstructor | StringConstructor)[];
    };
    sorterState: PropType<SortState<any>>;
    sorterOrder: PropType<SortOrder>;
    sortDirections: PropType<SortOrder[]>;
    nextSortOrder: PropType<SortOrder>;
    wrapText: BooleanConstructor;
    showFilter: BooleanConstructor;
}>>, {
    column: FinallyColumnType<import("../interface").DefaultRecordType>;
    showSorterTooltip: boolean;
    wrapText: boolean;
    showFilter: boolean;
}>;
export default _default;
