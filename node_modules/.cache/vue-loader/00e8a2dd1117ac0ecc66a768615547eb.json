{"remainingRequest":"/Users/macbookpro/Documents/hr-manage/node_modules/_vue-loader@15.9.8@vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/macbookpro/Documents/hr-manage/node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js??ref--1-0!/Users/macbookpro/Documents/hr-manage/node_modules/_vue-loader@15.9.8@vue-loader/lib/index.js??vue-loader-options!/Users/macbookpro/Documents/hr-manage/src/views/hr_manage_table/PojectStatus.vue?vue&type=template&id=149fdfbd&scoped=true&","dependencies":[{"path":"/Users/macbookpro/Documents/hr-manage/src/views/hr_manage_table/PojectStatus.vue","mtime":1653150345871},{"path":"/Users/macbookpro/Documents/hr-manage/node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macbookpro/Documents/hr-manage/node_modules/_vue-loader@15.9.8@vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/macbookpro/Documents/hr-manage/node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macbookpro/Documents/hr-manage/node_modules/_vue-loader@15.9.8@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}