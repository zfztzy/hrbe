{"remainingRequest":"/Users/macbookpro/Documents/hr-manage/node_modules/_vue-loader@15.9.8@vue-loader/lib/index.js??vue-loader-options!/Users/macbookpro/Documents/hr-manage/src/components/CommonTable.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/macbookpro/Documents/hr-manage/src/components/CommonTable.vue","mtime":1653317987786},{"path":"/Users/macbookpro/Documents/hr-manage/node_modules/_babel-loader@8.2.3@babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/macbookpro/Documents/hr-manage/node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macbookpro/Documents/hr-manage/node_modules/_vue-loader@15.9.8@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmNvbnN0IGRhdGEgPSBbXTsKZm9yIChsZXQgaSA9IDA7IGkgPCAxMDA7IGkrKykgewogIGRhdGEucHVzaCh7CiAgICBrZXk6IGksCiAgICBuYW1lOiBgRWRyd2FyZCAke2l9YCwKICAgIGFnZTogMzIsCiAgICBhZGRyZXNzOiBgTG9uZG9uIFBhcmsgbm8uICR7aX1gLAogIH0pOwp9CmltcG9ydCAqIGFzIHJlcXVlc3QgZnJvbSAiQC9uZXR3b3JrL3JlcXVlc3QiCmV4cG9ydCBkZWZhdWx0IHsKICBwcm9wczogewogICAgdGFibGVUeXBlOiB7CiAgICAgIHR5cGU6IFN0cmluZwogICAgfSwKICAgIG5ld1N3aXRjaDogewogICAgICB0eXBlOiBOdW1iZXIKICAgIH0sCiAgfSwKICBkYXRhKCkgewogICAgdGhpcy5jYWNoZURhdGEgPSBkYXRhLm1hcChpdGVtID0+ICh7IC4uLml0ZW0gfSkpOwogICAgcmV0dXJuIHsKICAgICAgZGF0YSwKICAgICAgY29sdW1uczogdW5kZWZpbmVkLAogICAgICBlZGl0aW5nS2V5OiAnJywKICAgICAgY29sTGlzdDpbXSwKICAgICAgaXNOZXdpbmc6IGZhbHNlCiAgICB9OwogIH0sCiAgbWV0aG9kczogewogICAgaGFuZGxlQ2hhbmdlKHZhbHVlLCBrZXksIGNvbHVtbikgewogICAgICBjb25zdCBuZXdEYXRhID0gWy4uLnRoaXMuZGF0YV07CiAgICAgIGNvbnN0IHRhcmdldCA9IG5ld0RhdGEuZmluZChpdGVtID0+IGtleSA9PT0gaXRlbS5rZXkpOwogICAgICBpZiAodGFyZ2V0KSB7CiAgICAgICAgdGFyZ2V0W2NvbHVtbl0gPSB2YWx1ZTsKICAgICAgICB0aGlzLmRhdGEgPSBuZXdEYXRhOwogICAgICB9CiAgICB9LAogICAgZWRpdChrZXkpIHsKICAgICAgY29uc3QgbmV3RGF0YSA9IFsuLi50aGlzLmRhdGFdOwogICAgICBjb25zdCB0YXJnZXQgPSBuZXdEYXRhLmZpbmQoaXRlbSA9PiBrZXkgPT09IGl0ZW0ua2V5KTsKICAgICAgdGhpcy5lZGl0aW5nS2V5ID0ga2V5OwogICAgICBpZiAodGFyZ2V0KSB7CiAgICAgICAgdGFyZ2V0LmVkaXRhYmxlID0gdHJ1ZTsKICAgICAgICB0aGlzLmRhdGEgPSBuZXdEYXRhOwogICAgICB9CiAgICB9LAogICAgc2F2ZShrZXkpIHsKICAgICAgY29uc3QgbmV3RGF0YSA9IFsuLi50aGlzLmRhdGFdOwogICAgICBjb25zdCBuZXdDYWNoZURhdGEgPSBbLi4udGhpcy5jYWNoZURhdGFdOwogICAgICBjb25zdCB0YXJnZXQgPSBuZXdEYXRhLmZpbmQoaXRlbSA9PiBrZXkgPT09IGl0ZW0ua2V5KTsKICAgICAgY29uc3QgdGFyZ2V0Q2FjaGUgPSBuZXdDYWNoZURhdGEuZmluZChpdGVtID0+IGtleSA9PT0gaXRlbS5rZXkpOwogICAgICBpZiAodGFyZ2V0ICYmIHRhcmdldENhY2hlKSB7CiAgICAgICAgZGVsZXRlIHRhcmdldC5lZGl0YWJsZTsKICAgICAgICB0aGlzLmRhdGEgPSBuZXdEYXRhOwogICAgICAgIE9iamVjdC5hc3NpZ24odGFyZ2V0Q2FjaGUsIHRhcmdldCk7CiAgICAgICAgdGhpcy5jYWNoZURhdGEgPSBuZXdDYWNoZURhdGE7CiAgICAgIH0KICAgICAgdGhpcy4kZW1pdCgnc2F2ZScsIG5ld0RhdGEsIHRoaXMuZWRpdGluZ0tleSkKICAgICAgdGhpcy5lZGl0aW5nS2V5ID0gJyc7CiAgICAgIHRoaXMuY2FjaGVEYXRhID0gdGhpcy5kYXRhLm1hcChpdGVtID0+ICh7IC4uLml0ZW0gfSkpOwogICAgfSwKICAgIGNhbmNlbChrZXkpIHsKICAgICAgY29uc3QgbmV3RGF0YSA9IFsuLi50aGlzLmRhdGFdOwogICAgICBjb25zdCB0YXJnZXQgPSBuZXdEYXRhLmZpbmQoaXRlbSA9PiBrZXkgPT09IGl0ZW0ua2V5KTsKICAgICAgdGhpcy5lZGl0aW5nS2V5ID0gJyc7CiAgICAgIGlmICh0YXJnZXQpIHsKICAgICAgICBPYmplY3QuYXNzaWduKHRhcmdldCwgdGhpcy5jYWNoZURhdGEuZmluZChpdGVtID0+IGtleSA9PT0gaXRlbS5rZXkpKTsKICAgICAgICBkZWxldGUgdGFyZ2V0LmVkaXRhYmxlOwogICAgICAgIHRoaXMuZGF0YSA9IG5ld0RhdGE7CiAgICAgIH0KICAgICAgaWYgKHRoaXMuaXNOZXdpbmcpIHsKICAgICAgICB0aGlzLmlzTmV3aW5nID0gZmFsc2UKICAgICAgICBjb25zdCBuZXdEYXRhID0gWy4uLnRoaXMuZGF0YV07CiAgICAgICAgbmV3RGF0YS5yZW1vdmUoMCkKICAgICAgICB0aGlzLmRhdGEgPSBuZXdEYXRhOwogICAgICB9CiAgICB9LAogICAgZ2V0Q29sdW1ucyAoKSB7CiAgICAgIHJlcXVlc3QucmVxdWVzdCh7CiAgICAgIHVybDogdGhpcy5nZXRCYXNlVXJsKCkgKyAnZ2V0X2NvbHVtbnMvJywKICAgICAgbWV0aG9kOiAncG9zdCcsCiAgICAgIGRhdGE6IHt0YWJsZVR5cGU6IHRoaXMudGFibGVUeXBlfQogICAgICB9KS50aGVuKHJlcyA9PnsKICAgICAgICB0aGlzLmNvbHVtbnMgPSByZXMuZGF0YS5jb2x1bW5zOwogICAgICAgIHRoaXMuY29sdW1ucy5mb3JFYWNoKGVsZW1lbnQgPT4gewogICAgICAgICAgdGhpcy5jb2xMaXN0LnB1c2goZWxlbWVudC5kYXRhSW5kZXgpCiAgICAgICAgfSk7CiAgICAgICAgY29uc29sZS5sb2codGhpcy5jb2xMaXN0KTsKICAgICAgfSkuY2F0Y2goZXJyID0+ewogICAgICAgIGNvbnNvbGUubG9nKGVycik7CiAgICAgIH0pCiAgICB9LAogICAgZ2V0RGF0YSAoKSB7CiAgICAgIHJlcXVlc3QucmVxdWVzdCh7CiAgICAgIHVybDogdGhpcy5nZXRCYXNlVXJsKCkgKyAnZ2V0X2NvbW1vbl9kYXRhLycsCiAgICAgIG1ldGhvZDogJ3Bvc3QnLAogICAgICBkYXRhOiB7CiAgICAgICAgdGFibGVUeXBlOiB0aGlzLnRhYmxlVHlwZSwKICAgICAgICBmaWx0ZXJSZWdpb246IHRoaXMuJGNvb2tpZXMuZ2V0KCJyZWdpb24iKQogICAgICB9CiAgICAgIH0pLnRoZW4ocmVzID0+ewogICAgICAgIHRoaXMuZGF0YSA9IHJlcy5kYXRhLnRhYmxlRGF0YTsKICAgICAgICB0aGlzLmNhY2hlRGF0YSA9IHRoaXMuZGF0YS5tYXAoaXRlbSA9PiAoeyAuLi5pdGVtIH0pKTsKICAgICAgfSkuY2F0Y2goZXJyID0+ewogICAgICAgIGNvbnNvbGUubG9nKGVycik7CiAgICAgIH0pCiAgICB9CiAgfSwKICBjcmVhdGVkICgpIHsKICAgIHRoaXMuZ2V0Q29sdW1ucygpCiAgICB0aGlzLmdldERhdGEoKQogIH0sCiAgd2F0Y2g6IHsKICAgIG5ld1N3aXRjaDp7CiAgICAgIGhhbmRsZXIgKCkgewogICAgICAgIHRoaXMuaXNOZXdpbmcgPSB0cnVlCiAgICAgICAgZm9yIChsZXQgaW5kZXggPSAwOyBpbmRleCA8IHRoaXMuZGF0YS5sZW5ndGg7IGluZGV4KyspIHsKICAgICAgICAgIHRoaXMuZGF0YVtpbmRleF0ua2V5ICs9IDE7CiAgICAgICAgfQogICAgICAgIHRoaXMuZGF0YS51bnNoaWZ0KHsKICAgICAgICAgIGtleTogMCwKICAgICAgICB9KTsKICAgICAgICB0aGlzLmNhY2hlRGF0YSA9IHRoaXMuZGF0YS5tYXAoaXRlbSA9PiAoeyAuLi5pdGVtIH0pKTsKICAgICAgICBjb25zdCBuZXdEYXRhID0gWy4uLnRoaXMuZGF0YV07CiAgICAgICAgY29uc3QgdGFyZ2V0ID0gbmV3RGF0YS5maW5kKGl0ZW0gPT4gMCA9PT0gaXRlbS5rZXkpOwogICAgICAgIHRoaXMuZWRpdGluZ0tleSA9IDA7CiAgICAgICAgaWYgKHRhcmdldCkgewogICAgICAgICAgdGFyZ2V0LmVkaXRhYmxlID0gdHJ1ZTsKICAgICAgICAgIHRoaXMuZGF0YSA9IG5ld0RhdGE7CiAgICAgICAgfQogICAgICB9CiAgICB9LAogIH0KfTsK"},{"version":3,"sources":["CommonTable.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmfile":"CommonTable.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <a-table v-if=\"columns\" :columns=\"columns\" :data-source=\"data\" bordered :pagination=\"{ pageSize: 15 }\"  :scroll=\"{ x: 1500, y: 400 }\">\n    <template\n      v-for=\"col in colList\"\n      :slot=\"col\"\n      slot-scope=\"text, record\"\n    >\n      <div :key=\"col\">\n        <a-input\n          v-if=\"record.editable\"\n          style=\"margin: -5px 0\"\n          :value=\"text\"\n          @change=\"e => handleChange(e.target.value, record.key, col)\"\n        />\n        <template v-else>\n          {{ text }}\n        </template>\n      </div>\n    </template>\n    <template slot=\"operation\" slot-scope=\"text, record\">\n      <div class=\"editable-row-operations\">\n        <span v-if=\"record.editable\">\n          <a @click=\"() => save(record.key)\">Save</a>\n          <a-popconfirm title=\"Sure to cancel?\" @confirm=\"() => cancel(record.key)\">\n            <a>Cancel</a>\n          </a-popconfirm>\n        </span>\n        <span v-else>\n          <a :disabled=\"editingKey !== ''\" @click=\"() => edit(record.key)\">Edit</a>\n        </span>\n      </div>\n    </template>\n  </a-table>\n</template>\n<script>\nconst data = [];\nfor (let i = 0; i < 100; i++) {\n  data.push({\n    key: i,\n    name: `Edrward ${i}`,\n    age: 32,\n    address: `London Park no. ${i}`,\n  });\n}\nimport * as request from \"@/network/request\"\nexport default {\n  props: {\n    tableType: {\n      type: String\n    },\n    newSwitch: {\n      type: Number\n    },\n  },\n  data() {\n    this.cacheData = data.map(item => ({ ...item }));\n    return {\n      data,\n      columns: undefined,\n      editingKey: '',\n      colList:[],\n      isNewing: false\n    };\n  },\n  methods: {\n    handleChange(value, key, column) {\n      const newData = [...this.data];\n      const target = newData.find(item => key === item.key);\n      if (target) {\n        target[column] = value;\n        this.data = newData;\n      }\n    },\n    edit(key) {\n      const newData = [...this.data];\n      const target = newData.find(item => key === item.key);\n      this.editingKey = key;\n      if (target) {\n        target.editable = true;\n        this.data = newData;\n      }\n    },\n    save(key) {\n      const newData = [...this.data];\n      const newCacheData = [...this.cacheData];\n      const target = newData.find(item => key === item.key);\n      const targetCache = newCacheData.find(item => key === item.key);\n      if (target && targetCache) {\n        delete target.editable;\n        this.data = newData;\n        Object.assign(targetCache, target);\n        this.cacheData = newCacheData;\n      }\n      this.$emit('save', newData, this.editingKey)\n      this.editingKey = '';\n      this.cacheData = this.data.map(item => ({ ...item }));\n    },\n    cancel(key) {\n      const newData = [...this.data];\n      const target = newData.find(item => key === item.key);\n      this.editingKey = '';\n      if (target) {\n        Object.assign(target, this.cacheData.find(item => key === item.key));\n        delete target.editable;\n        this.data = newData;\n      }\n      if (this.isNewing) {\n        this.isNewing = false\n        const newData = [...this.data];\n        newData.remove(0)\n        this.data = newData;\n      }\n    },\n    getColumns () {\n      request.request({\n      url: this.getBaseUrl() + 'get_columns/',\n      method: 'post',\n      data: {tableType: this.tableType}\n      }).then(res =>{\n        this.columns = res.data.columns;\n        this.columns.forEach(element => {\n          this.colList.push(element.dataIndex)\n        });\n        console.log(this.colList);\n      }).catch(err =>{\n        console.log(err);\n      })\n    },\n    getData () {\n      request.request({\n      url: this.getBaseUrl() + 'get_common_data/',\n      method: 'post',\n      data: {\n        tableType: this.tableType,\n        filterRegion: this.$cookies.get(\"region\")\n      }\n      }).then(res =>{\n        this.data = res.data.tableData;\n        this.cacheData = this.data.map(item => ({ ...item }));\n      }).catch(err =>{\n        console.log(err);\n      })\n    }\n  },\n  created () {\n    this.getColumns()\n    this.getData()\n  },\n  watch: {\n    newSwitch:{\n      handler () {\n        this.isNewing = true\n        for (let index = 0; index < this.data.length; index++) {\n          this.data[index].key += 1;\n        }\n        this.data.unshift({\n          key: 0,\n        });\n        this.cacheData = this.data.map(item => ({ ...item }));\n        const newData = [...this.data];\n        const target = newData.find(item => 0 === item.key);\n        this.editingKey = 0;\n        if (target) {\n          target.editable = true;\n          this.data = newData;\n        }\n      }\n    },\n  }\n};\n</script>\n<style scoped>\n.editable-row-operations a {\n  margin-right: 8px;\n}\n</style>\n"]}]}