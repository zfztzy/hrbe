{"remainingRequest":"/Users/macbookpro/Documents/hr-manage/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/macbookpro/Documents/hr-manage/src/views/study/Studyleetcode.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/macbookpro/Documents/hr-manage/src/views/study/Studyleetcode.vue","mtime":1645099024260},{"path":"/Users/macbookpro/Documents/hr-manage/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macbookpro/Documents/hr-manage/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macbookpro/Documents/hr-manage/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/macbookpro/Documents/hr-manage/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macbookpro/Documents/hr-manage/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBTdHVkeXJvdyBmcm9tICcuLi8uLi9jb21wb25lbnRzL3Jvdy9TdHVkeXJvdy52dWUnCi8vIGltcG9ydCAqIGFzIHJlcXVlc3QgZnJvbSAnLi4vLi4vbmV0d29yay9yZXF1ZXN0JwovLyBAIGlzIGFuIGFsaWFzIHRvIC9zcmMKCgoKZXhwb3J0IGRlZmF1bHQgewogIGNvbXBvbmVudHM6IHtTdHVkeXJvd30sCiAgbmFtZTogJ1N0dWR5bGVldGNvZGUnLAogIGRhdGEoKXsKICAgICAgcmV0dXJuewoKICAgIC8vIHByb3BzOlsnaW1zZ3AnLCdtZW51bGlzdCcsJ2ltc2cnLCdpbXNnYicsJ2ltc2d0JywnaGVpZ2h0TGlzdCddLAogICAgICAgICAgc3R1ZHlJbmZvOnsKICAgICAgICAgICAgICBpbXNncDpgCiAgICA8cD7nu7TmiqTkuIDkuKrlrZjlgqjkuIvmoIfnmoTljZXosIPmoIjvvIzku47moIjlupXliLDmoIjpobbnmoTkuIvmoIflr7nlupTnmoTmuKnluqbliJfooajkuK3nmoTmuKnluqbkvp3mrKHpgJLlh4/jgII8YnI+CiAgICAgICAg5aaC5p6c5LiA5Liq5LiL5qCH5Zyo5Y2V6LCD5qCI6YeM77yM5YiZ6KGo56S65bCa5pyq5om+5Yiw5LiL5LiA5qyh5rip5bqm5pu06auY55qE5LiL5qCH44CCPGJyPgogICAgICAgIOato+WQkemBjeWOhua4qeW6puWIl+ihqOOAguWvueS6jua4qeW6puWIl+ihqOS4reeahOavj+S4quWFg+e0oCBUW2ld77yM5aaC5p6c5qCI5Li656m677yM5YiZ55u05o6l5bCGIGkg6L+b5qCI77yM5aaC5p6c5qCI5LiN5Li656m677yMPGJyPgogICAgICAgIOWImeavlOi+g+agiOmhtuWFg+e0oCBwcmV2SW5kZXgg5a+55bqU55qE5rip5bqmIFRbcHJldkluZGV4XSDlkozlvZPliY3muKnluqYgVFtpXe+8jDxicj4KICAgICAgICDlpoLmnpwgVFtpXSA+IFRbcHJldkluZGV4Xe+8jOWImeWwhiBwcmV2SW5kZXgg56e76Zmk77yM5bm25bCGIHByZXZJbmRleCDlr7nlupTnmoTnrYnlvoXlpKnmlbDotYvkuLogPGJyPgogICAgICAgIGkgLSBwcmV2SW5kZXjvvIzph43lpI3kuIrov7Dmk43kvZznm7TliLDmoIjkuLrnqbrmiJbogIXmoIjpobblhYPntKDlr7nlupTnmoTmuKnluqblsI/kuo7nrYnkuo7lvZPliY3muKnluqbvvIw8YnI+CiAgICAgICAg54S25ZCO5bCGIGkg6L+b5qCI44CC5Li65LuA5LmI5Y+v5Lul5Zyo5by55qCI55qE5pe25YCZ5pu05pawIGFuc1twcmV2SW5kZXhdIOWRou+8n+WboOS4uuWcqOi/meenjeaDheWGteS4i++8jDxicj4KICAgICAgICDljbPlsIbov5vmoIjnmoQgaSDlr7nlupTnmoQgVFtpXSDkuIDlrprmmK8gVFtwcmV2SW5kZXhdIOWPs+i+ueesrOS4gOS4quavlOWug+Wkp+eahOWFg+e0oO+8jDxicj4KICAgICAgICDor5Xmg7PlpoLmnpwgcHJldkluZGV4IOWSjCBpIOacieavlOWug+Wkp+eahOWFg+e0oO+8jOWBh+iuvuS4i+agh+S4uiBq77yM6YKj5LmIIHByZXZJbmRleCDkuIDlrprkvJrlnKjkuIvmoIcgaiDnmoTpgqPkuIDova7ooqvlvLnmjonjgII8YnI+CiAgICAgICAg55Sx5LqO5Y2V6LCD5qCI5ruh6Laz5LuO5qCI5bqV5Yiw5qCI6aG25YWD57Sg5a+55bqU55qE5rip5bqm6YCS5YeP77yM5Zug5q2k5q+P5qyh5pyJ5YWD57Sg6L+b5qCI5pe277yM5Lya5bCG5rip5bqm5pu05L2O55qE5YWD57Sg5YWo6YOo56e76Zmk77yM5bm25pu05paw5Ye65qCI5YWD57Sg5a+55bqU55qE562J5b6F5aSp5pWw77yM6L+Z5qC35Y+v5Lul56Gu5L+d562J5b6F5aSp5pWw5LiA5a6a5piv5pyA5bCP55qE44CCPGJyPgogICAgPC9wPmAsCiAgICAgICAgICAgICAgbWVudWxpc3Q6WyfljZXosIPmoIgnXSwKICAgICAgICAgICAgICBpbXNnOifmr4/ml6XmuKnluqYnLAogICAgICAgICAgICAgIGltc2diOifpmr7luqY65Lit562JJywKICAgICAgICAgICAgICBpbXNndDonMjAyMS0wMS0yNCcsCiAgICAgICAgICAgICAgaGVpZ2h0TGlzdDpbMCw5OTk5XSwKICAgICAgICAgICAgICBsZWV0Q29kZUxpbms6J2h0dHBzOi8vbGVldGNvZGUtY24uY29tL3Byb2JsZW1zL2xvbmdlc3Qtc3Vic3RyaW5nLXdpdGhvdXQtcmVwZWF0aW5nLWNoYXJhY3RlcnMvJywKICAgICAgICAgICAgICBhYTon6K+35qC55o2u5q+P5pel5rCU5rip5YiX6KGo77yM6YeN5paw55Sf5oiQ5LiA5Liq5YiX6KGo44CC5a+55bqU5L2N572u55qE6L6T5Ye65Li677ya6KaB5oOz6KeC5rWL5Yiw5pu06auY55qE5rCU5rip77yM6Iez5bCR6ZyA6KaB562J5b6F55qE5aSp5pWw44CC5aaC5p6c5rCU5rip5Zyo6L+Z5LmL5ZCO6YO95LiN5Lya5Y2H6auY77yM6K+35Zyo6K+l5L2N572u55SowqAwIOadpeS7o+abv+OAguS+i+Wmgu+8jOe7meWumuS4gOS4quWIl+ihqMKgdGVtcGVyYXR1cmVzID0gWzczLCA3NCwgNzUsIDcxLCA2OSwgNzIsIDc2LCA3M13vvIzkvaDnmoTovpPlh7rlupTor6XmmK/CoFsxLCAxLCA0LCAyLCAxLCAxLCAwLCAwXeOAguaPkOekuu+8muawlOa4qSDliJfooajplb/luqbnmoTojIPlm7TmmK/CoFsxLCAzMDAwMF3jgILmr4/kuKrmsJTmuKnnmoTlgLznmoTlnYfkuLrljY7msI/luqbvvIzpg73mmK/lnKjCoFszMCwgMTAwXcKg6IyD5Zu05YaF55qE5pW05pWw44CCJwogICAgICAgICAgfQogICAgICB9CiAgfSwKICBjcmVhdGVkKCkgewogICAgLy8gICByZXF1ZXN0LnJlcXVlc3QoewogICAgLy8gICB1cmw6J2h0dHA6Ly8zOS4xMDcuMjI3LjI1Mi9nZXRTdHVkeVBhcmFncmFwaERldGFpbC8nLAogICAgLy8gICBkYXRhOnsncGlkJzogMywgJ2NvZGUnOiAwfSwKICAgIC8vICAgbWV0aG9kOiAncG9zdCcsCiAgICAvLyB9KS50aGVuKHJlcyA9PnsKICAgIC8vICAgdGhpcy5zdHVkeUluZm8gPSByZXMuZGF0YS5zdHVkeUluZm8KICAgIC8vIH0pLmNhdGNoKGVyciA9PnsKICAgIC8vICAgY29uc29sZS5sb2coZXJyKTsKICAgIC8vIH0pCiAgfQp9Cgo="},{"version":3,"sources":["Studyleetcode.vue"],"names":[],"mappings":";;;;;;;AAOA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Studyleetcode.vue","sourceRoot":"src/views/study","sourcesContent":["<template>\n  <div>\n    <Studyrow :studyInfo=\"studyInfo\"></Studyrow>\n  </div>\n</template>\n\n<script>\nimport Studyrow from '../../components/row/Studyrow.vue'\n// import * as request from '../../network/request'\n// @ is an alias to /src\n\n\n\nexport default {\n  components: {Studyrow},\n  name: 'Studyleetcode',\n  data(){\n      return{\n\n    // props:['imsgp','menulist','imsg','imsgb','imsgt','heightList'],\n          studyInfo:{\n              imsgp:`\n    <p>维护一个存储下标的单调栈，从栈底到栈顶的下标对应的温度列表中的温度依次递减。<br>\n        如果一个下标在单调栈里，则表示尚未找到下一次温度更高的下标。<br>\n        正向遍历温度列表。对于温度列表中的每个元素 T[i]，如果栈为空，则直接将 i 进栈，如果栈不为空，<br>\n        则比较栈顶元素 prevIndex 对应的温度 T[prevIndex] 和当前温度 T[i]，<br>\n        如果 T[i] > T[prevIndex]，则将 prevIndex 移除，并将 prevIndex 对应的等待天数赋为 <br>\n        i - prevIndex，重复上述操作直到栈为空或者栈顶元素对应的温度小于等于当前温度，<br>\n        然后将 i 进栈。为什么可以在弹栈的时候更新 ans[prevIndex] 呢？因为在这种情况下，<br>\n        即将进栈的 i 对应的 T[i] 一定是 T[prevIndex] 右边第一个比它大的元素，<br>\n        试想如果 prevIndex 和 i 有比它大的元素，假设下标为 j，那么 prevIndex 一定会在下标 j 的那一轮被弹掉。<br>\n        由于单调栈满足从栈底到栈顶元素对应的温度递减，因此每次有元素进栈时，会将温度更低的元素全部移除，并更新出栈元素对应的等待天数，这样可以确保等待天数一定是最小的。<br>\n    </p>`,\n              menulist:['单调栈'],\n              imsg:'每日温度',\n              imsgb:'难度:中等',\n              imsgt:'2021-01-24',\n              heightList:[0,9999],\n              leetCodeLink:'https://leetcode-cn.com/problems/longest-substring-without-repeating-characters/',\n              aa:'请根据每日气温列表，重新生成一个列表。对应位置的输出为：要想观测到更高的气温，至少需要等待的天数。如果气温在这之后都不会升高，请在该位置用 0 来代替。例如，给定一个列表 temperatures = [73, 74, 75, 71, 69, 72, 76, 73]，你的输出应该是 [1, 1, 4, 2, 1, 1, 0, 0]。提示：气温 列表长度的范围是 [1, 30000]。每个气温的值的均为华氏度，都是在 [30, 100] 范围内的整数。'\n          }\n      }\n  },\n  created() {\n    //   request.request({\n    //   url:'http://39.107.227.252/getStudyParagraphDetail/',\n    //   data:{'pid': 3, 'code': 0},\n    //   method: 'post',\n    // }).then(res =>{\n    //   this.studyInfo = res.data.studyInfo\n    // }).catch(err =>{\n    //   console.log(err);\n    // })\n  }\n}\n\n</script>\n\n\n<style>\n.study{\n  height: 1875px;\n\n}\n</style>"]}]}